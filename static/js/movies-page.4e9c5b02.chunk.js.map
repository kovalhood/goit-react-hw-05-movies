{"version":3,"file":"static/js/movies-page.4e9c5b02.chunk.js","mappings":"0NACA,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA6F,4BAA7F,EAAgI,0B,2BC6ChI,MAzCA,SAAqBA,GACjB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAqBA,OAAO,kBAAMC,UAAWC,EAAQC,SAfX,SAAAC,GAGjB,GAFAA,EAAMC,iBAEqB,KAAvBN,EAAYO,OAIZ,OAFAN,EAAe,IAERO,EAAAA,GAAAA,KAAW,2BAGtBV,EAAMM,SAASJ,GAEfC,EAAe,KAGZ,WACH,kBACIC,UAAWC,EACXM,KAAK,OACLC,aAAa,MACbC,KAAK,cACLC,YAAY,kBACZC,MAAOb,EACPc,SA3BwB,SAAAT,GAC5BJ,EAAeI,EAAMU,cAAcF,MAAMG,mBA6BzC,mBAAQP,KAAK,SAASP,UAAWC,EAAjC,UACI,gBAAKD,UAAWC,EAAQ,aAAW,OAAnC,UACI,gBAAKc,KAAI,UAAKC,EAAAA,EAAL,mB,oCC/BV,SAASC,EAAT,GAA0C,IAAfnB,EAAc,EAAdA,YACtC,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOqB,EAAP,KAAeC,EAAf,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACc,KAAhBtB,IAIJuB,EAAAA,EAAAA,IAAYvB,GACPwB,MAAK,SAAAC,GACF,KAAIA,EAAKC,cAAgB,GAMrB,OADAL,EAAU,IACHb,EAAAA,GAAAA,MAAY,4EALnBa,GAAUM,EAAAA,EAAAA,GAAeF,EAAKG,eAQ3C,CAAC5B,KAIG,SAAC6B,EAAA,EAAD,WACH,SAACC,EAAA,EAAD,CAAgBL,KAAOL,MCzBhB,SAASW,IAAc,IAAD,EACjC,GAAsChC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAGM+B,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAK,UAAG,IAAIC,gBAAgBH,EAASI,QAAQC,IAAI,gBAA5C,QAAwD,GAoBnE,OANAjB,EAAAA,EAAAA,YAAU,WACQ,KAAVc,GACAnC,EAAemC,KAEpB,CAACA,KAEG,UAACI,EAAA,EAAD,YACH,SAAC,EAAD,CAAapC,SAlBI,SAAAqC,GACjB,GAAIzC,IAAgByC,EAChB,OAAOjC,EAAAA,GAAAA,KAAW,2BAGtBwB,EAAS,GAAD,OAAIE,EAASQ,SAAb,kBAA+BD,IAEvCxC,EAAewC,OAYf,SAACtB,EAAD,CAAkBnB,YAAcA","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesPage/SearchField/SearchField.module.css?8a9e","components/MoviesPage/SearchField/SearchField.jsx","components/MoviesPage/MoviesSearchList/MoviesSearchList.jsx","components/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchField_form__PQ-2B\",\"input\":\"SearchField_input__Q8-+I\",\"button\":\"SearchField_button__sspyl\",\"icon\":\"SearchField_icon__XHZPW\"};","import { useState } from 'react';\r\nimport s from './SearchField.module.css';\r\nimport { toast } from 'react-toastify';\r\nimport sprite from '../../../images/icons.svg'\r\n\r\nfunction SearchField(props) {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const handleSearchQueryChange = event => {\r\n        setSearchQuery(event.currentTarget.value.toLowerCase());\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (searchQuery.trim() === '') {\r\n            //Setting searchQuery state '' in case query got spaces\r\n            setSearchQuery('');\r\n\r\n            return toast.info(\"Input your search query\");\r\n        }\r\n\r\n        props.onSubmit(searchQuery);\r\n        \r\n        setSearchQuery('');\r\n    }\r\n\r\n    return <form className={s.form} onSubmit={handleSubmit}>\r\n        <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            name=\"searchQuery\"\r\n            placeholder=\"Search movie...\"\r\n            value={searchQuery}\r\n            onChange={handleSearchQueryChange}\r\n        />\r\n        \r\n        <button type=\"submit\" className={s.button}>\r\n            <svg className={s.icon} aria-label=\"logo\">\r\n                <use href={`${sprite}#logo`}></use>\r\n            </svg>\r\n        </button>\r\n    </form>\r\n}\r\n\r\nexport default SearchField;","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { fetchMovies } from 'services/movies-api';\r\nimport MoviesList from 'components/MoviesList';\r\nimport MoviesListItem from '../../MoviesListItem';\r\nimport normalizedData from 'services/normalized-data';\r\nimport s from './MoviesSearchList.module.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function MoviesSearchList({searchQuery}) {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (searchQuery === '') {\r\n            return;\r\n        }\r\n\r\n        fetchMovies(searchQuery)\r\n            .then(data => {\r\n                if (data.total_results > 0) {\r\n                    setMovies(normalizedData(data.results));\r\n                }\r\n\r\n                else {\r\n                    setMovies([]);\r\n                    return toast.error(\"Sorry, there are no images matching your search query. Please try again.\");\r\n                }\r\n            });\r\n    }, [searchQuery])\r\n\r\n\r\n        \r\n    return <MoviesList>\r\n        <MoviesListItem data={ movies }/>\r\n    </MoviesList>\r\n}\r\n\r\nMoviesSearchList.propTypes = {\r\n    searchQuery: PropTypes.string,\r\n}","import { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport Container from 'components/Container';\r\nimport SearchField from './SearchField';\r\nimport MoviesSearchList from './MoviesSearchList';\r\nimport { toast } from 'react-toastify';\r\nimport s from './MoviesPage.module.css';\r\n\r\nexport default function MoviesPage() {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    // Catching search query from address bar\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const query = new URLSearchParams(location.search).get('query') ?? '';\r\n\r\n    // Catching search query from search bar input field\r\n    const handleSubmit = searchQueryValue => {\r\n        if (searchQuery === searchQueryValue) {\r\n            return toast.info(\"Input new search query.\");\r\n        }\r\n\r\n        navigate(`${location.pathname}?query=${searchQueryValue}`);\r\n\r\n        setSearchQuery(searchQueryValue);\r\n    }\r\n\r\n    // Setting search query from address bar\r\n    useEffect(() => {\r\n        if (query !== '') {\r\n            setSearchQuery(query);\r\n        }\r\n    }, [query])\r\n\r\n    return <Container>\r\n        <SearchField onSubmit={handleSubmit}/>\r\n        <MoviesSearchList searchQuery={ searchQuery }/>\r\n    </Container>\r\n}\r\n"],"names":["props","useState","searchQuery","setSearchQuery","className","s","onSubmit","event","preventDefault","trim","toast","type","autoComplete","name","placeholder","value","onChange","currentTarget","toLowerCase","href","sprite","MoviesSearchList","movies","setMovies","useEffect","fetchMovies","then","data","total_results","normalizedData","results","MoviesList","MoviesListItem","MoviesPage","navigate","useNavigate","location","useLocation","query","URLSearchParams","search","get","Container","searchQueryValue","pathname"],"sourceRoot":""}